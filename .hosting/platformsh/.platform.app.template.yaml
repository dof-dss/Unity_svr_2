# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html
#
# NOTE: DO NOT add site specific configuration to this file. The Unity shell
# will populate this file with site config as part of the hosting:build
# command.

# The name of this app. Must be unique within a project.
name: 'unity'

# The runtime the application uses.
type: 'php:8.0'

dependencies:
  php:
    composer/composer: '^2'

runtime:
  # Enable the redis extension so Drupal can communicate with the Redis cache.
  extensions:
    - apcu
    - redis

# The size of the persistent disk of the application (in MB).
disk: 8000

# The 'mounts' describe writable, persistent filesystem mounts in the application.
mounts:
  '/web/files':
    source: local
    source_path: 'files'
  '/tmp':
    source: local
    source_path: 'tmp'
  '/private':
    source: local
    source_path: 'private'
  '/.drush':
    source: local
    source_path: 'drush'
  '/drush-backups':
    source: local
    source_path: 'drush-backups'
  '/.console':
    source: local
    source_path: 'console'

# Configuration of the build of this application.
build:
  flavor: composer

# The hooks executed at various points in the lifecycle of the application.
hooks:
  build: |
    set -e
  # During post_deploy the sites are available (see https://docs.platform.sh/configuration/app/hooks.html)
  post_deploy: |
    set -e

    # Save the Fastly service value and overwrite with a dummy one in order to break
    # the connection to Fastly, otherwise any cache clear of any site will purge the
    # entire Fastly cache - we don't want this to happen as we'd like Fastly to continue
    # serving the sites to anonymous users during a release.
    echo "***** Breaking connection to Fastly ******"
    temp=$FASTLY_API_SERVICE
    export FASTLY_API_SERVICE=dummyservice

    # For each multi site - run db-updates and import config.
    for site in <sites_placeholder>
    do
      echo "****** $site deployment ******"
      cd /app/web/sites/$site
      # Disable Fastly logging
      drush disable-fastly-logging
      # Readonlymode module should be installed on all sites,
      # but we'll just make sure.
      drush en readonlymode -l $site -y
      # Set site to readonly just in case editors are logged on.
      drush -l $site cset readonlymode.settings enabled 1 -y
      drush -l $site -y cache-rebuild
      drush -l $site -y config-import
      drush -l $site -y updatedb
      drush -l $site import-all-if-installed safe
      # Turn off readonly mode.
      drush -l $site cset readonlymode.settings enabled 0 -y
    done

    # Reconnect to Fastly
    echo "***** Reinstate connection to Fastly ******"
    export FASTLY_API_SERVICE=$temp

    # For each multi site - clear cache (including Fastly cache)
    for site in <sites_placeholder>
    do
      echo "****** $site cache clear ******"
      cd /app/web/sites/$site
      drush -l $site -y cache-rebuild
      # Enable Fastly logging
      drush enable-fastly-logging
    done

# The configuration of app when it is exposed to the web.
web:
  # Specific parameters for different URL prefixes.
  locations:
    '/':
      # The folder from which to serve static assets, for this location.
      #
      # This is a filesystem path, relative to the application root.
      root: 'web'

      # How long to allow static assets from this location to be cached.
      #
      # Can be a time in seconds, or -1 for no caching. Times can be
      # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
      # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
      # 365 days).
      expires: 5m

      # Whether to forward disallowed and missing resources from this
      # location to the application.
      #
      # Can be true, false or a URI path string.
      passthru: '/index.php'

      # Deny access to static files in this location.
      allow: false

      # Rules for specific URI patterns.
      rules:
        # Allow access to common static files.
        '\.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$':
          allow: true
        '^/robots\.txt$':
          allow: true
        '^/sitemap\.xml$':
          allow: true
        '^\/sites\/.+\/themes\/.+\/images\/favicons\/.+\.webmanifest$':
          allow: true
          expires: 2w

        # Deny direct access to configuration files.
        '^/sites/sites\.php$':
          scripts: false
        '^/sites/[^/]+/settings.*?\.php$':
          scripts: false

    '/files':
      # Allow access to all files in the public files directory.
      allow: true
      expires: 1d
      passthru: '/index.php'
      root: 'web/files'

      # Do not execute PHP scripts.
      scripts: false

      rules:
        # Provide a longer TTL (2 weeks) for aggregated CSS and JS files.
        '^/sites/default/files/(css|js)':
          expires: 2w
